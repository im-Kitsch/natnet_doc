<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classUdpMulticastSocket" kind="class" language="C++" prot="public">
    <compoundname>UdpMulticastSocket</compoundname>
    <includes refid="socket_8h" local="no">socket.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classUdpMulticastSocket_1ac5d9a1d34112e9e6a49aaac7038035d8" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int UdpMulticastSocket::MAXRECV</definition>
        <argsstring></argsstring>
        <name>MAXRECV</name>
        <initializer>= 3000</initializer>
        <briefdescription>
<para>Maximum number of bytse that can be read at a time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="37" column="22" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classUdpMulticastSocket_1a32bca4420a1d935ac2e8c5d291d3bbf2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int UdpMulticastSocket::m_socket</definition>
        <argsstring></argsstring>
        <name>m_socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="63" column="9" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUdpMulticastSocket_1ac698ef1a545e70f5fdc5326029175124" prot="private" static="no" mutable="no">
        <type>sockaddr_in</type>
        <definition>sockaddr_in UdpMulticastSocket::m_local_addr</definition>
        <argsstring></argsstring>
        <name>m_local_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="64" column="17" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUdpMulticastSocket_1ace043265729c5d81cfad909e7e62bc61" prot="private" static="no" mutable="no">
        <type>sockaddr_in</type>
        <definition>sockaddr_in UdpMulticastSocket::HostAddr</definition>
        <argsstring></argsstring>
        <name>HostAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="65" column="17" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUdpMulticastSocket_1a9a97849cb8b384e358810966bac75f12" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool UdpMulticastSocket::remote_ip_exist</definition>
        <argsstring></argsstring>
        <name>remote_ip_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="66" column="10" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUdpMulticastSocket_1a3fbd50322dced663dd75a8af74739f13" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char UdpMulticastSocket::buf[MAXRECV+1]</definition>
        <argsstring>[MAXRECV+1]</argsstring>
        <name>buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="67" column="10" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUdpMulticastSocket_1ae2c964bc47ae5053c0a4053fbe5bdcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UdpMulticastSocket::UdpMulticastSocket</definition>
        <argsstring>(const int local_port, const std::string multicast_ip=&quot;224.0.0.1&quot;)</argsstring>
        <name>UdpMulticastSocket</name>
        <param>
          <type>const int</type>
          <declname>local_port</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>multicast_ip</declname>
          <defval>&quot;224.0.0.1&quot;</defval>
        </param>
        <briefdescription>
<para>Creates a socket and joins the multicast group with the given address. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="40" column="5" bodyfile="natnet_bridge/src/socket.cpp" bodystart="16" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classUdpMulticastSocket_1a0e64ebc7bfda84e521766885f2ca9727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UdpMulticastSocket::~UdpMulticastSocket</definition>
        <argsstring>()</argsstring>
        <name>~UdpMulticastSocket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="43" column="5" bodyfile="natnet_bridge/src/socket.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classUdpMulticastSocket_1a5584c3d0d9501c72957a417240f6cb31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UdpMulticastSocket::recv</definition>
        <argsstring>()</argsstring>
        <name>recv</name>
        <briefdescription>
<para>Retrieve data from multicast group. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of bytes received or -1 if no data is available</para>
</simplesect>
This call is non-blocking. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="49" column="9" bodyfile="natnet_bridge/src/socket.cpp" bodystart="127" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classUdpMulticastSocket_1ab2a9c5fed0a7b21b7943c76f29091236" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* UdpMulticastSocket::getBuffer</definition>
        <argsstring>()</argsstring>
        <name>getBuffer</name>
        <briefdescription>
<para>Returns a pointer to the internal buffer, holding the received data. </para>
        </briefdescription>
        <detaileddescription>
<para>The buffer size may be obtained from MAXRECV. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="54" column="16" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classUdpMulticastSocket_1a2a8082d349529fad7040c907b2e630e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UdpMulticastSocket::send</definition>
        <argsstring>(const char *buf, unsigned int sz, int port)</argsstring>
        <name>send</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="natnet_bridge/include/natnet/socket.h" line="59" column="9" bodyfile="natnet_bridge/src/socket.cpp" bodystart="152" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows to retrieve data from a UDP multicast group. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="natnet_bridge/include/natnet/socket.h" line="33" column="1" bodyfile="natnet_bridge/include/natnet/socket.h" bodystart="32" bodyend="68"/>
    <listofallmembers>
      <member refid="classUdpMulticastSocket_1a3fbd50322dced663dd75a8af74739f13" prot="private" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>buf</name></member>
      <member refid="classUdpMulticastSocket_1ab2a9c5fed0a7b21b7943c76f29091236" prot="public" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>getBuffer</name></member>
      <member refid="classUdpMulticastSocket_1ace043265729c5d81cfad909e7e62bc61" prot="private" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>HostAddr</name></member>
      <member refid="classUdpMulticastSocket_1ac698ef1a545e70f5fdc5326029175124" prot="private" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>m_local_addr</name></member>
      <member refid="classUdpMulticastSocket_1a32bca4420a1d935ac2e8c5d291d3bbf2" prot="private" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>m_socket</name></member>
      <member refid="classUdpMulticastSocket_1ac5d9a1d34112e9e6a49aaac7038035d8" prot="public" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>MAXRECV</name></member>
      <member refid="classUdpMulticastSocket_1a5584c3d0d9501c72957a417240f6cb31" prot="public" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>recv</name></member>
      <member refid="classUdpMulticastSocket_1a9a97849cb8b384e358810966bac75f12" prot="private" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>remote_ip_exist</name></member>
      <member refid="classUdpMulticastSocket_1a2a8082d349529fad7040c907b2e630e6" prot="public" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>send</name></member>
      <member refid="classUdpMulticastSocket_1ae2c964bc47ae5053c0a4053fbe5bdcb3" prot="public" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>UdpMulticastSocket</name></member>
      <member refid="classUdpMulticastSocket_1a0e64ebc7bfda84e521766885f2ca9727" prot="public" virt="non-virtual"><scope>UdpMulticastSocket</scope><name>~UdpMulticastSocket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
